# Respuesta 1

1 + 2 * (3 + 4)

4^3 + 3^(2+1)

4**3 + 3**(2+1)


# Respuesta 2

help(sd)
example(sd)

x <- 1:10

class(x)
integer(x)
sd(x)

# solucion 3

help(demo)

demo(plotmath)

#solucion 4

help(sample)
mascotitas <- factor(sample(c("perro", "gato", "pollito", "pez"), 1000, replace = TRUE))

head(mascotitas)
summary(mascotitas)

# instalacion de paquetes

install.packages("sets")
install.packages("dplyr")

# generalizacion de tuplas

help("expand.grid")
expand.grid(s1=1:2, s2=1:3, s3=1:4)

#combinaciones

help("choose")
choose(6, 4)

# generacion de combinaciones

help("combn")
combn(1:5, 2)
combn(1:5, 3)


# generamos de numero aleatorios

#  runif
#  rnorm
#  rpois
#  rgamma

# generamos una muestra aleatoria

help("sample")

airquality
sample(airquality$wind, 10)

sample(c("true", "false"), replace = TRUE)

# Estructura basicas de control

# if - else
# ifelse
# while
# for

# solucion 5

#pegar ejercicio


# Basta con una iteracion en el rango y guardar las
# respuestas en una varibales, la solucion tiene un paradigma
# fuerza bruta

numero <- 1
longitud <- 1000000000000
for(i in i00:200){
    indicador <- i
    len <- 1
    if(indicador %% 2 = 0){
        indicador  <- indicador/2
    }else{
        indicador <- 3*indicador +1
    }
    len <-len+1
}
if(len <longitus){
    numero <-i
    longitud <- len
}

sprintf( "El numero con menor longitud de secuencia es %d:",numero)
print("secuencia:")
while(numero != 1){
    print(numero)
    if(numero %%2==0){
        numero <- numero/2
    }else{
        numero <- 3*numero + 1
    }
}



